version: "3.5"
services:

  elasticsearch:
    image: elasticsearch:5.6.8-alpine
    container_name: elasticsearch
    ports:
      - "9200:9200"
    restart: always
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    command: elasticsearch -Etransport.host=127.0.0.1 -Ehttp.cors.enabled=true -Ehttp.cors.allow-origin="*"
    networks:
      - hydronet
      - extnet
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "elasticsearch"


  influxdb:
    image: influxdb:1.5.2
    container_name: influxdb
    ports:
      - "8086:8086"
    restart: always
    networks:
      - hydronet
      - extnet
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "elasticsearch"

  logstash:
    image: logstash:5.6.8-alpine
    container_name: logstash
    restart: always
    volumes:
      - ./logstash/patterns:/opt/logstash/extra_patterns
      - ./logstash/config:/config
    networks:
      hydronet:
        ipv4_address: 172.16.0.38
    depends_on:
      - elasticsearch
    command: logstash -f /config

  kibana:
    image: kibana:5.6.8
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      - extnet
      - hydronet
    volumes:
      - ./kibana:/opt/kibana/config/
    environment:
      - "NODE_OPTIONS=--max-old-space-size=200"
    depends_on:
      - elasticsearch
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "kibana"

  nodeexporter:
    image: prom/node-exporter:v0.15.2
    container_name: nodeexporter
    ports:
      - "9100:9100"
    networks:
      - hydronet
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "nodeexporter"

  cadvisor:
    image: google/cadvisor:v0.29.0
    container_name: cadvisor
    networks:
      - hydronet
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "cadvisor"

  prometheus:
    build: ./prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - extnet
      - hydronet
    depends_on:
      - kafka
    environment:
      - "MANAGER_HOST=sidecar"
      - "MANAGER_PORT=8080"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "prometheus"

  zipkin:
    image: openzipkin/zipkin:1.28.1
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - extnet
      - hydronet
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "zipkin"

  grafana:
    image: grafana/grafana:5.0.4
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - extnet
      - hydronet
    environment:
      - "GF_SECURITY_ADMIN_PASSWORD=foobar"
      - "GF_USERS_ALLOW_SIGN_UP=false"
    depends_on:
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "grafana"


  zookeeper:
    image: confluentinc/cp-zookeeper:4.0.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - extnet
      - hydronet
    environment:
      - "ZOOKEEPER_CLIENT_PORT=2181"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "zookeeper"

  kafka:
    #build: ./kafka
    image: confluentinc/cp-kafka:4.0.0
    container_name: kafka
    ports:
      - "19092:19092"
    networks:
      - extnet
      - hydronet
    environment:
      - "KAFKA_JMX_HOSTNAME=kafka"
      - "KAFKA_AUTO_CREATE_TOPICS_ENABLE=true"
      - "KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181"
      - "KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
      - "KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9092,OUTSIDE://${KAFKA_ADVERTISED_HOST}:19092"
      - "KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE"
      - "KAFKA_DEFAULT_REPLICATION_FACTOR=1"
      - "KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1"
    depends_on:
      - zookeeper
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "kafka"

  postgres:
    image: postgres:9.6-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    networks:
      - hydronet
    environment:
      - "POSTGRES_DB=docker"
      - "POSTGRES_USER=docker"
      - "POSTGRES_PASSWORD=docker"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "postgres"

  manager:
    image: ${manager_image}:${manager_version}
    container_name: manager
    ports:
      - "19091:9091"
    networks:
      - hydronet
      - extnet
    depends_on:
      - postgres
    environment:
      - "APP_SHADOWING_ON=true"
      - "ADVERTISED_MANAGER_HOST=manager"
      - "ADVERTISED_MANAGER_PORT=9091"
      - "DATABASE_HOST=postgres"
      - "SIDECAR_HOST=sidecar"
      - "NETWORK_NAME=demo_hydronet"
      - "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_KEY=${AWS_SECRET_KEY}"
      - "S3_MODEL_REGION=${S3_MODEL_REGION}"
      - "S3_MODEL_BUCKET=${S3_MODEL_BUCKET}"
      - "S3_MODEL_QUEUE=${S3_MODEL_QUEUE}"
      - "S3_MODEL_PATH=/models"
      - "LOCAL_MODEL_PATH=/models"
      - "METRICS_INFLUXDB_HOST=influxdb"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./models:/models
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "manager"

  sidecar:
    image: ${sidecar_image}:${sidecar_version}
    container_name: sidecar
    ports:
      - "8080:8080"
      - "8082:8082"
    networks:
      - extnet
      - hydronet
    environment:
      #- "SIDECAR_LOG_LEVEL=trace"
      - "MANAGER_HOST=manager"
      - "MANAGER_PORT=9091"
      - "SERVICE_ID=-20"
      - "SERVICE_NAME=manager"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "sidecar"

  managerui:
    image: ${manager_ui_image}:${manager_ui_version}
    container_name: managerui
    ports:
      - "80:9091"
    networks:
      - extnet
      - hydronet
    environment:
      - "MANAGER_HOST=sidecar:8080"
      - "SONAR_HOST=serving-sonar:9090"
      - "ELASTIC_HOST=elasticsearch:9200"
      - "INFLUX_HOST=influxdb:8086"
    depends_on:
      - sidecar
      - serving-sonar
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "managerui"

  kafka-serving:
    image: ${gateway_kafka_image}:${gateway_kafka_version}
    container_name: kafka-serving
    networks:
      - hydronet
    ports:
      - "19093:9091"
    depends_on:
      - sidecar
      - kafka
    environment:
      - "SIDECAR_INGRESS_PORT=8080"
      - "SIDECAR_EGRESS_PORT=8081"
      - "SIDECAR_ADMIN_PORT=8082"
      - "SIDECAR_HOST=sidecar"
      - "KAFKA_HOST=kafka"
      - "KAFKA_PORT=9092"
#    logging:
#      driver: gelf
#      options:
#        gelf-address: "udp://172.16.0.38:12201"
#        labels: "kafka-serving"

  serving-sonar:
    image: hydrosphere/serving-sonar:v0.0.2
    container_name: serving-sonar
    networks:
      - extnet
      - hydronet
    depends_on:
      - kafka
    ports:
      - "9999:9999"
    volumes:
      - ./sonar/sonar.conf:/etc/sonar.conf

  tensorflow:
    image: tensorflow/tensorflow:latest-py3
    container_name: tensorflow
    ports:
      - "8888:8888"
    networks:
      - extnet
      - hydronet
    environment:
      - "PASSWORD=${tensorflow_password}"
    volumes:
      - ./noteboks/:/notebooks
    logging:
      driver: gelf
      options:
        gelf-address: "udp://172.16.0.38:12201"
        labels: "tensorflow"

networks:
  hydronet:
    name: demo_hydronet
    internal: true
    ipam:
      config:
        - subnet: 172.16.0.0/24

  extnet:
    driver: bridge
